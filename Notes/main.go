package main

import "fmt"

func main() {

	var types string
	types = "bool, string, int32  int64, uint32 uint64, byte // alias for uint8, rune // alias for int32, float32 float64, complex64 complex128."

	fmt.Println("Notes:")
	fmt.Println()
	fmt.Println()
	fmt.Println("Recourses:")
	fmt.Println()
	fmt.Println("If you’re ever stuck on something, check out:")
	fmt.Println()
	fmt.Println("Codecademy's forums")
	fmt.Println("View questions and answers from learners on this site!")
	fmt.Println()
	fmt.Println("Stack Overflow’s Go questions")
	fmt.Println("A forum of programmers answering programming questions.")
	fmt.Println()
	fmt.Println()
	fmt.Println("Go’s official site")
	fmt.Println("Go to the official site for documentation.")
	fmt.Println()
	fmt.Println()
	fmt.Println("Google")
	fmt.Println("Roll up your sleeves and search it up!")
	fmt.Println("It may help to search Golang instead of Go in certain cases.")
	fmt.Println()
	fmt.Println("Using the 'go doc' command is helpful.")
	fmt.Println("You can find out more about a package.")
	fmt.Println("Or about a function inside the package.")
	fmt.Println("EXAMPLE: go doc time.Now")
	fmt.Println()
	fmt.Println()
	fmt.Println()
	fmt.Println("Comments:")
	fmt.Println()
	fmt.Println("You can create comments with //, or you can make a multi line comment with /* Comment goes here */.")
	fmt.Println()
	fmt.Println()
	fmt.Println()
	fmt.Println("Variables and Types:")
	fmt.Println()
	fmt.Println("You can create a variable by defining one with var.")
	fmt.Println("You can use that variable in your code as a nickname for your values.")
	fmt.Println("EXAMPLE :")
	fmt.Println("var funFact = \"Hummingbirds' wings can beat up to 200 times a second.\"")
	fmt.Println("fmt.Println(\"Did you know?\")")
	fmt.Println("fmt.Println(funFact)")
	fmt.Println("Output :")
	fmt.Println("Did you know?")
	fmt.Println("Hummingbirds' wings can beat up to 200 times a second.")
	fmt.Println()
	fmt.Println("You can also make a constant. (const)")
	fmt.Println("They Can be used to create a variable that can not be changed later on in the code.")
	fmt.Println()
	fmt.Println("Variables can be assigned different types :", types)
	fmt.Println("The basic types in Go : ints, floats, complexs, and strings.")
	fmt.Println(":= is known as the short declaration operator. It is used to declare and initialize the variables inside and outside the functions.")
	fmt.Println()
	fmt.Println("When defining variables, you can defnie the in single line, for example, ammount, unit := 10, \"dollers\" or you can do it like this:")
	fmt.Println("var ammount, unit int32")
	fmt.Println("ammount = 10")
	fmt.Println("unit = \"dollers\"")
	fmt.Println()
	fmt.Println()
	fmt.Println()
	fmt.Println("Verbs:")
	fmt.Println()
	fmt.Println("In go there are tags called verbs in the fmt module. Here are some basic verbs used in Go")
	fmt.Println("The %v verb is a is a place holder for variables included within the fmt.Print/ln line.")
	fmt.Println("The %T verb is to title the type of the included variable of the fmt.Print/ln line.")
	fmt.Println("The %% verb is a literal percent sign; consumes no value")
	fmt.Println("the %t is the word true or false")
	fmt.Println()
	fmt.Println()
	fmt.Println()
	fmt.Println("Operators:")
	fmt.Println()
	fmt.Println("Using an operator can decide how your if/else/else if statement will behave.")
	fmt.Println("Depending on wich operator you use for you block of code, will vary on your outcome of the finnished product.")
	fmt.Println()
	fmt.Println("Here are the basic operators:")
	fmt.Println("==  Equal to")
	fmt.Println("!=	 Not equal to")
	fmt.Println(" <	 Less than")
	fmt.Println(" >	 Greater than")
	fmt.Println("<=  Less than or equal to")
	fmt.Println(">=	 Greater than or equal to")
	fmt.Println()
	fmt.Println("Logical operators")
	fmt.Println("&&	And")
	fmt.Println("||	Or")
	fmt.Println(" !  Not")


}
